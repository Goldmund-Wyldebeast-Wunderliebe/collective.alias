collective.alias - to-do
========================

Edge cases
----------
 
 [ ] Implement folder behaviour by mixing in plone.folder
        - Alias is folderish if the target is folderish
        - Alias can only contain other aliases by default (?)
        - A folder listing on an alias of a folder shows items in the alias
            folder, using the settings and metadata of the target folder
        - Traversal to sub-items should not delegate

Testing
-------

 [ ] Test security
        - different workflow states/permissions
        - different local roles
        - different content rules

Performance
-----------

 [ ] Cache the alias target lookup in a _v_ attribute
        - don't cache until we have a version with an acquisition context!

 [ ] Cache the __providedBy__ decorator heavily
        - use a _v_ attribute on the instance
        - invalidate when the alias is modified

Integration
-----------

 [ ] Decide how to link to edit form
        - With the Alias FTI rendered useless, we can't merge the actions

 [ ] Make alias more read-only
        - Currently, it's too easy to get to an edit screen and set attributes
          on the alias by accidenet
        - Find a way to hide actions (e.g. edit tab)?
        - Use __setattr__ to stop setting attributes not pre-defined?

 [ ] Alias needs to be re-indexed when object is modified
        - set marker on the aliased object
        - register event handler for IObjectModifiedEvent on this marker
        - rebroadcast IObjectModifiedEvent on alias(es)

 [ ] Disable 'display' menu
        - or at least disallow setting a different layout

Missing
-------
 
 [ ] Add functional tests!
        - Probably want to use testbrowser for most of these

New functionality
-----------------

 [ ] Allow title override?
 [ ] Allow optionally showing link to original (in a viewlet?)
 [ ] Add icon overlay
 [ ] Implement "paste as alias" action
 [ ] Optionally keep workflow state + permissions in sync?
    - event driven?

Content class hierarchy
-----------------------

    Contained                       -- attributes, proxy
    DefaultDublinCoreImpl           -- attributes + methods, proxy
        PropertyManager             -- attributes + methods, proxy
    PortalContent                   -- SearchableText, __call__(), implement!
        DynamicType                 -- FTI methods, traversal hook, implement?
        CMFCatalogAware             -- see below
        SimpleItem                  -- base classes only, proxy
            Item                    -- id, isPrincipaFolderish, proxy
                Resource            -- ?
                CopySource          -- copy support, implement!
                Tabs                -- ?
                Traversable         -- URL, traversal, implement!
                Element             -- attributes + methods, proxy
                Owned               -- Ownership, implement!
                UndoSupport         -- Undo support, implement!
            RoleManager             -- Permissions and roles, implement? [*]
    CMFOrderedBTreeFolderBase       -- folder API, wraps, proxy
        BTreeFolder2Base            -- folder API, wraps, proxy
    CMFCatalogAware                 -- indexing operations, implement!
    BrowserDefaultMixin             -- attributes + methods, proxy