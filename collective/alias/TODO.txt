collective.alias - to-do
========================

Bugs/to test
------------

  [x] File content

  [x] Image content
        - including thumbnails in folder_summary_view
  
  [x] News item images
  
  [x] Folder content
        - should retain settings of target
        - should not show children of target
  
  [ ] Collections
        - criteria should continue to work
  
  [ ] AT references to alias
        - e.g. related item
  
  [x] Comments
        - should be shared
  
  [x] Permissions/different workflow states
        - permissions should be taken from the alias, not the target

  [x] Acquired content
        - probably wrapped in target object

  [x] Annotations (e.g. locks, contextual portlets)
        - should be shared

  [x] Aliasing of methods

  [x] Cataloging of alias
        - alias created/renamed/moved/deleted

  [x] Cataloging when target changed
        - target created/renamed/moved/deleted/modified
  
  [x] Target moved
  
  [x] Target copied
        - alias should point to original
        - IHasAlias should not be set
    
  [x] Target deleted
        - all aliases should be removed as well
        - causes error in z3c.relationfield!
  
  [x] Alias moved
  
  [x] Alias copied
  
  [x] Alias removed
  
  [x] Name chooser
        - should be based on target id
        - must not create naming conflicts
  
  [x] Different display templates
        - default should be whatever the target has set
        - 'display' menu actions on alias should not affect target
  
Integration
-----------

 [ ] Optionally allow folder behaviour to delegate to target
        - needed for collections to work, for example
        - target must be folderish
        - disallow adding content to alias directly
        - won't show folder listings: children won't have catalog entries
        - _getOb, __getitem__, objectIds, objectValues, objectItems, has_key

 [ ] Ensure alias has distinct UID
        - to allow separate references to alias and target
        - need to solve the AT->Dexterity reference problem first

 [ ] Make alias more read-only
        - hide regular edit actions/show alias @@edit view (override viewlet)
        - disallow portlet management

 [ ] Add "paste as alias" action

 [ ] Add optional title override

Missing
-------
 
 [ ] Add integration/functional tests!

Possible future functionality
-----------------------------

 [ ] Optionally keep workflow state + permissions in sync
        - set marker interface on source
        - register event handler

 [ ] Optionally allow traversal to children of target
        - do not create fake catalog entries
        - regular folder listings won't work
        - allow certain things like RichDocument to work

Content class hierarchy
-----------------------

    Contained                       -- attributes, proxy
    DefaultDublinCoreImpl           -- attributes + methods, proxy
        PropertyManager             -- attributes + methods, proxy
    PortalContent                   -- SearchableText, __call__(), implement!
        DynamicType                 -- FTI methods, traversal hook, implement?
        CMFCatalogAware             -- see below
        SimpleItem                  -- base classes only, proxy
            Item                    -- id, isPrincipaFolderish, proxy
                Resource            -- ?
                CopySource          -- copy support, implement!
                Tabs                -- ?
                Traversable         -- URL, traversal, implement!
                Element             -- attributes + methods, proxy
                Owned               -- Ownership, implement!
                UndoSupport         -- Undo support, implement!
            RoleManager             -- Permissions and roles, implement? [*]
    CMFOrderedBTreeFolderBase       -- folder API, wraps, proxy
        BTreeFolder2Base            -- folder API, wraps, proxy
    CMFCatalogAware                 -- indexing operations, implement!
    BrowserDefaultMixin             -- attributes + methods, proxy